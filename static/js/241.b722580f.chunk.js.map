{"version":3,"file":"static/js/241.b722580f.chunk.js","mappings":"yQAOMA,EAAgBC,EAAAA,GAAW,CAC/BC,KAAMD,EAAAA,KAAaE,SAAS,YAC5BC,MAAOH,EAAAA,KAAaE,SAAS,YAC7BE,SAAUJ,EAAAA,KAAaE,SAAS,YAAYG,IAAI,KAsFlD,UAnFe,WACX,IAAMC,GAAWC,EAAAA,EAAAA,MAYjB,OACE,SAAC,IAAD,CAAWC,EAAE,OAAb,UACA,SAAC,KAAD,CACEC,cAAe,CAAER,KAAM,GAAIE,MAAO,GAAIC,SAAU,IAChDM,SAde,SAAC,EAAD,GAA+C,IAA5CT,EAA2C,EAA3CA,KAAME,EAAqC,EAArCA,MAAOC,EAA8B,EAA9BA,SAA8B,EAAhBO,UACjDL,GACEM,EAAAA,EAAAA,IAAY,CACVX,KAAAA,EACAE,MAAAA,EACAC,SAAAA,IAGL,EAOKS,iBAAkBd,EAHpB,UAKE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOE,KAAK,OAAZ,SACG,gBAAGa,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,UAAC,KAAD,CAAaC,UAAWD,EAAKE,OAAOhB,MAAQc,EAAKG,QAAQjB,KAAzD,WACE,SAAC,IAAD,CAAWkB,QAAQ,aAAaC,GAAG,IAAnC,yBACA,SAAC,EAAAC,GAAD,kBACMP,GADN,IAEEQ,GAAG,aACHC,KAAK,OACLC,YAAY,OACZtB,UAAQ,MAEV,SAAC,KAAD,UAAmBa,EAAKE,OAAOhB,SAVlC,KAcH,SAAC,KAAD,CAAOA,KAAK,QAAZ,SACG,gBAAGa,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,UAAC,KAAD,CAAaC,UAAWD,EAAKE,OAAOd,OAASY,EAAKG,QAAQf,MAA1D,WACE,SAAC,IAAD,CAAWgB,QAAQ,cAAcC,GAAI,EAAGK,GAAI,EAA5C,sBACA,SAAC,EAAAJ,GAAD,kBACMP,GADN,IAEEQ,GAAG,cACHC,KAAK,QACLC,YAAY,QACZtB,UAAQ,MAER,SAAC,KAAD,UAAmBa,EAAKE,OAAOd,SAC/B,SAAC,KAAD,CAAgBuB,SAAS,KAAKN,GAAI,EAAlC,6CAXL,KAeH,SAAC,KAAD,CAAOnB,KAAK,WAAZ,SACG,gBAAGa,EAAH,EAAGA,MAAOC,EAAV,EAAUA,KAAV,OACC,UAAC,KAAD,CACEC,UAAWD,EAAKE,OAAOb,UAAYW,EAAKG,QAAQd,SADlD,WAGE,SAAC,IAAD,CAAWe,QAAQ,iBAAiBC,GAAI,EAAGK,GAAI,EAA/C,yBACA,SAAC,EAAAJ,GAAD,kBACMP,GADN,IAEEQ,GAAG,iBACHC,KAAK,WACLI,QAAQ,QACRC,MAAM,8CACNJ,YAAY,WACZtB,UAAQ,MAER,SAAC,KAAD,UAAmBa,EAAKE,OAAOb,YAC/B,SAAC,KAAD,CAAgBsB,SAAS,KAAKN,GAAI,EAAlC,gDAfL,KAoBH,SAAC,IAAD,CAAQG,KAAK,SAASM,KAAK,KAAKJ,GAAI,EAAGK,YAAY,SAAnD,2BAQT,C","sources":["components/pages/SignUp/SignUp.jsx"],"sourcesContent":["import { useDispatch } from \"react-redux\";\nimport { signUpThunk } from \"components/redux/thunks\";\nimport { Button, Container, FormControl, FormErrorMessage, FormHelperText, FormLabel, Input } from \"@chakra-ui/react\";\nimport { Formik, Field, Form } from 'formik';\nimport * as yup from 'yup';\n\n\nconst SignUpPattern = yup.object({\n  name: yup.string().required('Required'),\n  email: yup.string().required('Required'),\n  password: yup.string().required('Required').min(7),\n});\n\nconst SignUp = () => {\n    const dispatch = useDispatch()\n   \n    const submitForm = ({ name, email, password }, { resetForm }) => {\n    dispatch(\n      signUpThunk({\n        name,\n        email,\n        password,\n      })\n    );\n  };\n\n    return (\n      <Container m='auto'>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        onSubmit={submitForm}\n        validationSchema={SignUpPattern}\n      >\n        <Form>\n          <Field name=\"name\">\n            {({ field, form }) => (\n              <FormControl isInvalid={form.errors.name && form.touched.name}>\n                <FormLabel htmlFor=\"nameSignUp\" ml=\"3\">Username* </FormLabel>\n                <Input\n                  {...field}\n                  id=\"nameSignUp\"\n                  type=\"text\"\n                  placeholder=\"Name\"\n                  required\n                />\n                <FormErrorMessage>{form.errors.name}</FormErrorMessage>\n              </FormControl>\n            )}\n          </Field>\n          <Field name=\"email\">\n            {({ field, form }) => (\n              <FormControl isInvalid={form.errors.email && form.touched.email}>\n                <FormLabel htmlFor=\"emailSignUp\" ml={3} mt={4}>Email* </FormLabel>\n                <Input\n                  {...field}\n                  id=\"emailSignUp\"\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  required\n                />\n                  <FormErrorMessage>{form.errors.email}</FormErrorMessage>\n                  <FormHelperText fontSize='xs' ml={4}>We'll never share your email.</FormHelperText>\n              </FormControl>\n            )}\n          </Field>\n          <Field name=\"password\">\n            {({ field, form }) => (\n              <FormControl\n                isInvalid={form.errors.password && form.touched.password}\n              >\n                <FormLabel htmlFor=\"passwordSignUp\" ml={3} mt={4}>Password* </FormLabel>\n                <Input\n                  {...field}\n                  id=\"passwordSignUp\"\n                  type=\"password\"\n                  pattern=\".{7,}\"\n                  title=\"Password must be at least 7 characters long\"\n                  placeholder=\"Password\"\n                  required\n                />\n                  <FormErrorMessage>{form.errors.password}</FormErrorMessage>\n                  <FormHelperText fontSize='xs' ml={4}>We'll never share your password.</FormHelperText>\n              </FormControl>\n            )}\n          </Field>\n\n          <Button type=\"submit\" size=\"md\" mt={5} colorScheme=\"orange\">\n            Sign up\n          </Button>\n        </Form>\n      </Formik>\n    </Container>\n    )\n    \n}\n\nexport default SignUp\n\n\n\n\n"],"names":["SignUpPattern","yup","name","required","email","password","min","dispatch","useDispatch","m","initialValues","onSubmit","resetForm","signUpThunk","validationSchema","field","form","isInvalid","errors","touched","htmlFor","ml","I","id","type","placeholder","mt","fontSize","pattern","title","size","colorScheme"],"sourceRoot":""}