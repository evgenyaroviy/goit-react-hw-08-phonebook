{"version":3,"file":"static/js/182.9a586f30.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Phonebook/phonebook.module.css?5245","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","components/redux/selectors.js","components/Phonebook/ContactForm.jsx","components/NotificationMessage/NotificationMessage.jsx","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactList/contacts.module.css?016c","components/ContactList/ContactList.jsx","components/pages/PhonebookPage/PhonebookPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"phonebook_button__Eyg+r\",\"form\":\"phonebook_form__i7pVp\"};","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const getContacts = state => state.contacts;\n\nexport const getFilter = state => state.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const filteredContacts = contacts.items\n      .filter(el => el.name.toLowerCase().includes(filter.toLowerCase()))\n      .toSorted((a, b) => a.name.localeCompare(b.name));\n    return filteredContacts;\n  }\n);","import css from \"./phonebook.module.css\"\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getContacts } from \"components/redux/selectors\";\nimport { addContactThunk } from \"components/redux/thunks\";\n\n export const ContactForm = () => {\n   const dispatch = useDispatch();\n   const { items } = useSelector(getContacts);\n   \n   const submitForm = e => {\n    e.preventDefault();\n     const form = e.target;\n     const name = form.elements.name.value;\n     const phone = form.elements.number.value\n     const body = {\n            name,\n            phone,\n     };\n\n     const contactExists = items.some(contact => contact.name === name);\n\n      if (contactExists) {\n      alert(`${name} is already in contacts`);\n      return;\n    } else {\n      dispatch(addContactThunk(body));\n      form.reset();\n    }\n   };\n \n  return (\n    <div>\n      <form className={css.form} onSubmit={submitForm}>\n      <label> Name\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      </label>\n      <label> Number\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[ .\\-\\s]?\\(?\\d{1,3}?\\)?[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,4}[ .\\-\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      </label>\n      <button className={css.button}>Add contact</button>\n      </form>\n    </div>\n  )\n}","export const NotificationMessage = () => {\n    return (\n        <div style={{ marginLeft: '30px' }}>\n            You don't have any contact\n        </div>\n    )\n}","import { NotificationMessage } from '../NotificationMessage/NotificationMessage';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from '../redux/selectors';\nimport { filterContacts } from '../redux/filtersSlice';\nimport \"../Phonebook/phonebook.module.css\"\n\nexport const Filter = () => {\n  const { items: contacts} = useSelector(getContacts)\n  const dispatch = useDispatch()\n\n  const handleFilterChange = e => {\n    dispatch(filterContacts(e.target.value.toLowerCase().trim()));\n  }\n\n  return contacts.length !== 0 ? (\n    <div>\n      <label style={{marginLeft: '30px'}}>Find contacts by name:\n      <input\n        type=\"text\"\n        name=\"filter\"\n        onChange={handleFilterChange}\n              />\n        </label>\n    </div>\n  ) : (\n    <NotificationMessage />\n  );\n};","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"contacts_name__ILFnT\",\"del\":\"contacts_del__5J4N4\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { getFilteredContacts } from '../redux/selectors';\nimport css from './contacts.module.css'\nimport { useEffect } from 'react';\nimport { delContactThunk, getAllContactsThunk } from 'components/redux/thunks';\n\n\nexport const ContactList = () => {\n  const dispatch = useDispatch()\n  const filteredContacts = useSelector(getFilteredContacts)\n\n  useEffect(() => {\n    dispatch(getAllContactsThunk())\n  }, [dispatch])\n\n  const handleDeleteContact = id => {\n    dispatch(delContactThunk(id));;\n  };\n\n  return (\n    <div>\n      {filteredContacts?.map(({ id, name, phone }) => {\n        return (\n          <li key={id}>\n            <div className={css.name}>\n              {name}: {phone}\n            </div>\n            <button type=\"button\" className={css.del} onClick={() => handleDeleteContact(id)}>\n              Delete\n            </button>\n          </li>\n        );\n      })}\n      \n      \n    </div>\n  );\n};\n\n","import { ContactForm } from '../../Phonebook/ContactForm';\nimport { Filter } from '../../Filter/Filter';\nimport { ContactList } from '../../ContactList/ContactList';\nimport { useSelector } from 'react-redux';\nimport { getContacts } from '../../redux/selectors';\n\nconst PhonebookPage = () => {\n  const { isLoading, error } = useSelector(getContacts);\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {isLoading && <div style={{marginLeft: '30px'}}>Loading...</div>}\n      {error && <div>{error.message}</div>}\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default PhonebookPage"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","getContacts","state","contacts","getFilteredContacts","filter","items","el","toLowerCase","includes","toSorted","localeCompare","ContactForm","dispatch","useDispatch","useSelector","className","css","onSubmit","e","preventDefault","form","target","elements","phone","number","body","some","contact","alert","addContactThunk","reset","type","pattern","title","required","NotificationMessage","style","marginLeft","Filter","onChange","filterContacts","trim","ContactList","filteredContacts","useEffect","getAllContactsThunk","id","onClick","delContactThunk","handleDeleteContact","isLoading","error","message"],"sourceRoot":""}